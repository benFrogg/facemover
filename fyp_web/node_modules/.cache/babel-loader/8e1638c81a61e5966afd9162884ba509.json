{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP_Face_Animation\\\\fyp_full\\\\fyp_web\\\\src\\\\components\\\\Animator\\\\ImageAndFeature.js\",\n    _s = $RefreshSig$();\n\nimport { Center, Text, Heading, VStack, Button, Input, HStack, Container, SimpleGrid, Box, Image, Spinner } from \"@chakra-ui/react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport TreeItem from '@mui/lab/TreeItem';\nimport './ImageAndFeature.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  key: \"feature\",\n  label: \"Features\",\n  children: [{\n    key: \"1\",\n    label: \"Head Movement\"\n  }, {\n    key: \"2\",\n    label: \"Facial Expression\"\n  }, {\n    key: \"3\",\n    label: \"Eye Movement\"\n  }, {\n    key: \"GC\",\n    label: \"Gender Customization\",\n    children: [{\n      key: \"4\",\n      label: \"Male\"\n    }, {\n      key: \"5\",\n      label: \"Female\"\n    }]\n  }, {\n    key: \"FA\",\n    label: \"Face Aging\",\n    children: [{\n      key: \"6\",\n      label: \"Older\"\n    }, {\n      key: \"7\",\n      label: \"Younger\"\n    }]\n  }, {\n    key: \"8\",\n    label: \"Anime-Style\"\n  }, {\n    key: \"PA\",\n    label: \"Produce Audio\",\n    children: [{\n      key: \"9\",\n      label: \"Woman - Hello\"\n    }, {\n      key: \"10\",\n      label: \"Woman - Bye\"\n    }, {\n      key: \"11\",\n      label: \"Man - Hello\"\n    }, {\n      key: \"12\",\n      label: \"Man - Bye\"\n    }, {\n      key: \"13\",\n      label: \"Cartoon - Hello\"\n    }, {\n      key: \"14\",\n      label: \"Cartoon - Bye\"\n    }]\n  }]\n};\n\nfunction ImageAndFeature() {\n  _s();\n\n  const [selectedFeature, setSelectedFeature] = useState(null);\n  const [isSelected, setIsSelected] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadSuccessful, setUploadSuccessful] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [allPhotos, setAllPhotos] = useState([]);\n  const regex = /^[0-9\\b]+$/;\n\n  const NodeSelect = (event, nodeId) => {\n    if (regex.test(nodeId)) {\n      setSelectedFeature(nodeId);\n    } else {\n      setSelectedFeature(null);\n    }\n  };\n\n  const transformImage = async () => {\n    setSelectedFeature(selectedFeature);\n    setShowSpinner(true);\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile, selectedFile.name);\n    fetch(\"/get-image\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success posting!!\");\n      setUploadSuccessful(!uploadSuccessful);\n      setShowSpinner(false);\n    });\n  };\n\n  const renderTree = features => /*#__PURE__*/_jsxDEV(TreeItem, {\n    nodeId: features.key,\n    label: features.label,\n    children: Array.isArray(features.children) ? features.children.map(feature => renderTree(feature)) : null\n  }, features.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n\n  useEffect(() => {\n    console.log(\"Feature selected: \", selectedFeature);\n    fetch(\"/get-image\").then(response => response.json()).then(data => {\n      console.log(data);\n      setAllPhotos(data);\n    });\n  }, [uploadSuccessful]);\n\n  const onInputChange = e => {\n    console.log(e.target.files[0]);\n    setIsSelected(true);\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const onButtonClick = e => {\n    console.log(\"Button clicked..\");\n    e.target.value = \"\";\n  };\n\n  const onFileUpload = e => {\n    setShowSpinner(true);\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile, selectedFile.name);\n    fetch(\"/get-image\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success posting!!\");\n      setUploadSuccessful(!uploadSuccessful);\n      setShowSpinner(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Contents\",\n    children: [/*#__PURE__*/_jsxDEV(ChakraProvider, {\n      children: /*#__PURE__*/_jsxDEV(Center, {\n        bg: \"black\",\n        color: \"white\",\n        padding: 8,\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 7,\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Your Gallery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Take a look at all your photos!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: onInputChange,\n              onClick: onButtonClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 25\n            }, this), showSpinner && /*#__PURE__*/_jsxDEV(Center, {\n              children: /*#__PURE__*/_jsxDEV(Spinner, {\n                size: \"xl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n            columns: 3,\n            spacing: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"black\",\n        color: \"white\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        width: \"300px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(TreeView, {\n        defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 52\n        }, this),\n        defaultExpanded: [\"feature\"],\n        defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 121\n        }, this),\n        sx: {\n          height: 110,\n          flexGrow: 1\n        },\n        onNodeSelect: NodeSelect,\n        children: renderTree(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      children: /*#__PURE__*/_jsxDEV(HStack, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"solid\",\n          colorScheme: \"teal\",\n          onClick: onFileUpload,\n          children: \"Transform!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImageAndFeature, \"Gwe88W1I8s8OUqn3kQPvvSIolrs=\");\n\n_c = ImageAndFeature;\nexport default ImageAndFeature;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageAndFeature\");","map":{"version":3,"sources":["E:/FYP_Face_Animation/fyp_full/fyp_web/src/components/Animator/ImageAndFeature.js"],"names":["Center","Text","Heading","VStack","Button","Input","HStack","Container","SimpleGrid","Box","Image","Spinner","ChakraProvider","React","useEffect","useState","useContext","TreeView","ExpandMoreIcon","ChevronRightIcon","TreeItem","data","key","label","children","ImageAndFeature","selectedFeature","setSelectedFeature","isSelected","setIsSelected","selectedFile","setSelectedFile","uploadSuccessful","setUploadSuccessful","showSpinner","setShowSpinner","allPhotos","setAllPhotos","regex","NodeSelect","event","nodeId","test","transformImage","formData","FormData","append","name","fetch","method","body","then","response","json","console","log","renderTree","features","Array","isArray","map","feature","onInputChange","e","target","files","onButtonClick","value","onFileUpload","backgroundColor","color","marginLeft","marginRight","width","height","flexGrow"],"mappings":"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","sourcesContent":["import {\r\n    Center,\r\n    Text,\r\n    Heading,\r\n    VStack,\r\n    Button,\r\n    Input,\r\n    HStack,\r\n    Container,\r\n    SimpleGrid,\r\n    Box,\r\n    Image,\r\n    Spinner,\r\n  } from \"@chakra-ui/react\";\r\n  \r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TreeItem from '@mui/lab/TreeItem';\r\nimport './ImageAndFeature.css';\r\n\r\nconst data = {\r\n    key: \"feature\",\r\n    label: \"Features\",\r\n    children: \r\n    [\r\n        {\r\n            key: \"1\",\r\n            label: \"Head Movement\"\r\n        },\r\n        {\r\n            key: \"2\",\r\n            label: \"Facial Expression\"\r\n        },\r\n        {\r\n            key: \"3\",\r\n            label: \"Eye Movement\"\r\n        },\r\n        {\r\n            key: \"GC\",\r\n            label: \"Gender Customization\",\r\n            children: [\r\n                {\r\n                    key: \"4\",\r\n                    label: \"Male\",\r\n                },\r\n                {\r\n                    key: \"5\",\r\n                    label: \"Female\",\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            key: \"FA\",\r\n            label: \"Face Aging\",\r\n            children: [\r\n                {\r\n                    key: \"6\",\r\n                    label: \"Older\",\r\n                },\r\n                {\r\n                    key: \"7\",\r\n                    label: \"Younger\",\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            key: \"8\",\r\n            label: \"Anime-Style\"\r\n        },\r\n        {\r\n            key: \"PA\",\r\n            label: \"Produce Audio\",\r\n            children: [\r\n                {\r\n                    key: \"9\",\r\n                    label: \"Woman - Hello\",\r\n                },\r\n                {\r\n                    key: \"10\",\r\n                    label: \"Woman - Bye\",\r\n                },\r\n                {\r\n                    key: \"11\",\r\n                    label: \"Man - Hello\",\r\n                },\r\n                {\r\n                    key: \"12\",\r\n                    label: \"Man - Bye\",\r\n                },\r\n                {\r\n                    key: \"13\",\r\n                    label: \"Cartoon - Hello\",\r\n                },\r\n                {\r\n                    key: \"14\",\r\n                    label: \"Cartoon - Bye\",\r\n                },\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nfunction ImageAndFeature() {\r\n    const [ selectedFeature, setSelectedFeature ] = useState(null)\r\n    const [isSelected, setIsSelected] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [uploadSuccessful, setUploadSuccessful] = useState(false);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n    const [allPhotos, setAllPhotos] = useState([]);\r\n    const regex = /^[0-9\\b]+$/;\r\n\r\n    const NodeSelect = (event, nodeId) => {\r\n        if (regex.test(nodeId)) {\r\n            setSelectedFeature(nodeId)\r\n        } else {\r\n            setSelectedFeature(null)\r\n        }\r\n    }\r\n\r\n    const transformImage = async () => {\r\n        setSelectedFeature(selectedFeature)\r\n        setShowSpinner(true);\r\n        const formData = new FormData();\r\n        formData.append(\"file\", selectedFile, selectedFile.name);\r\n        fetch(\"/get-image\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            console.log(\"Success posting!!\");\r\n            setUploadSuccessful(!uploadSuccessful);\r\n            setShowSpinner(false);\r\n        });\r\n    }\r\n\r\n    const renderTree = (features) => (\r\n        <TreeItem key={features.key} nodeId={features.key} label={features.label}>\r\n            {Array.isArray(features.children) ? features.children.map((feature) => renderTree(feature)) : null}\r\n        </TreeItem>\r\n    )\r\n\r\n    useEffect(() => {\r\n        console.log(\"Feature selected: \", selectedFeature)\r\n\r\n        fetch(\"/get-image\")\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              console.log(data);\r\n              setAllPhotos(data);\r\n            });\r\n    }, [uploadSuccessful]);\r\n      \r\n    const onInputChange = (e) => {\r\n      console.log(e.target.files[0]);\r\n      setIsSelected(true);\r\n      \r\n      setSelectedFile(e.target.files[0]);\r\n    };\r\n    \r\n    const onButtonClick = (e) => {\r\n      console.log(\"Button clicked..\");\r\n      e.target.value = \"\";\r\n    };\r\n      \r\n    const onFileUpload = (e) => {\r\n        setShowSpinner(true);\r\n        const formData = new FormData();\r\n        formData.append(\"file\", selectedFile, selectedFile.name);\r\n        fetch(\"/get-image\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            console.log(\"Success posting!!\");\r\n            setUploadSuccessful(!uploadSuccessful);\r\n            setShowSpinner(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"Contents\">\r\n            <ChakraProvider>\r\n                <Center bg=\"black\" color=\"white\" padding={8}>\r\n                    <VStack spacing={7}>\r\n                    <Heading>Your Gallery</Heading>\r\n                    <Text>Take a look at all your photos!</Text>\r\n                    <HStack>\r\n                        <input\r\n                        type=\"file\"\r\n                        onChange={onInputChange}\r\n                        onClick={onButtonClick}\r\n                        ></input>\r\n                        {showSpinner && (\r\n                        <Center>\r\n                            <Spinner size=\"xl\" />\r\n                        </Center>\r\n                        )}\r\n                    </HStack>\r\n                    <Heading>Preview</Heading>\r\n                    <SimpleGrid columns={3} spacing={8}>\r\n                        {/*{selectedFile.map(file => Object.assign(file, {preview: URL.createObjectURL(file)}))}*/}\r\n                    </SimpleGrid>\r\n                    </VStack>\r\n                </Center>\r\n            </ChakraProvider>\r\n            <div style={{backgroundColor: \"black\", color: \"white\", marginLeft: \"auto\", marginRight: \"auto\", width: \"300px\"}}>\r\n                    <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpanded={[\"feature\"]} defaultExpandIcon={<ChevronRightIcon />} sx={{height: 110, flexGrow: 1}} onNodeSelect={NodeSelect}>\r\n                        {renderTree(data)}\r\n                    </TreeView>\r\n            </div>\r\n            <ChakraProvider>\r\n                <HStack>\r\n                    <Button variant='solid' colorScheme='teal' onClick={onFileUpload}>Transform!</Button>\r\n                </HStack>\r\n            </ChakraProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageAndFeature;"]},"metadata":{},"sourceType":"module"}