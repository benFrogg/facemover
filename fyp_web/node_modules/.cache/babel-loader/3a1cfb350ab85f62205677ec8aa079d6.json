{"ast":null,"code":"var _jsxFileName = \"D:\\\\FYP_Face_Animation\\\\fyp_full\\\\fyp_web\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from \"./components/Login/LoginPage\";\nimport Home from \"./components/Home\";\nimport { LoginContext } from \"./components/Login/LoginContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  {\n    /*const adminUser = {\n     username: \"FMadmin\",\n     password: \"+34Myojwa\"\n    }*/\n  }\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  {\n    /*const Login = details => {\n     console.log(details);\n      if (details.username == adminUser.username && details.password == adminUser.password) {\n       console.log (\"Logged in\");\n       setUser({\n         username: details.username\n       })\n       setLoggedIn(true)\n     } else {\n       console.log(\"Login not found\")\n       setError(\"Login not found\")\n     }\n    }\n    const Logout = () => {\n     console.log(\"Logout\");\n     setUser({username: \"\", password: \"\"})\n    }*/\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"B+Q/gTcpCgOqQpxyY7HqXBdtMAM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/FYP_Face_Animation/fyp_full/fyp_web/src/App.js"],"names":["React","useState","useContext","useEffect","BrowserRouter","Router","Routes","Route","LoginPage","Home","LoginContext","App","user","setUser","username","password","error","setError","isLoggedIn","setLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,YAAT,QAA6B,iCAA7B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AAAC;AACH;AACA;AACA;AAAM;AAEJ,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBZ,QAAQ,CAAC;AAACa,IAAAA,QAAQ,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAAD,CAAlC;AACA,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAEiB,UAAF,EAAcC,WAAd,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AAGA;AAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM;AAEJ,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,6BACI,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;GAtCQU,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from \"./components/Login/LoginPage\";\nimport Home from \"./components/Home\";\nimport { LoginContext } from \"./components/Login/LoginContext\";\n\nfunction App() {\n  {/*const adminUser = {\n    username: \"FMadmin\",\n    password: \"+34Myojwa\"\n  }*/}\n\n  const [ user, setUser ] = useState({username: \"\", password: \"\"});\n  const [ error, setError ] = useState(\"\");\n  const [ isLoggedIn, setLoggedIn ] = useState(false)\n\n\n  {/*const Login = details => {\n    console.log(details);\n\n    if (details.username == adminUser.username && details.password == adminUser.password) {\n      console.log (\"Logged in\");\n      setUser({\n        username: details.username\n      })\n      setLoggedIn(true)\n    } else {\n      console.log(\"Login not found\")\n      setError(\"Login not found\")\n    }\n  }\n\n  const Logout = () => {\n    console.log(\"Logout\");\n    setUser({username: \"\", password: \"\"})\n  }*/}\n\n  return (\n    <>\n      <Router>\n          <Routes>\n            <Route path='/' element={<Home/>}/>\n          </Routes>\n      </Router></>);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}