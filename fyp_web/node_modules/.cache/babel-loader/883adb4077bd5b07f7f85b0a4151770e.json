{"ast":null,"code":"var _jsxFileName = \"D:\\\\FYP_Face_Animation\\\\fyp_full\\\\fyp_web\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from \"./components/Login/LoginPage\";\nimport Home from \"./components/Home\";\nimport LoginContextProvider, { LoginContext } from \"./components/Login/LoginContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  {\n    /*const adminUser = {\n     username: \"FMadmin\",\n     password: \"+34Myojwa\"\n    }\n    const [ user, setUser ] = useState({username: \"\", password: \"\"});\n    const [ error, setError ] = useState(\"\");\n    const [ isLoggedIn, setLoggedIn ] = useState(false)*/\n  }\n  const [token, setToken] = useContext(LoginContext);\n  {\n    /*const Login = details => {\n     console.log(details);\n      if (details.username == adminUser.username && details.password == adminUser.password) {\n       console.log (\"Logged in\");\n       setUser({\n         username: details.username\n       })\n       setLoggedIn(true)\n     } else {\n       console.log(\"Login not found\")\n       setError(\"Login not found\")\n     }\n    }\n    const Logout = () => {\n     console.log(\"Logout\");\n     setUser({username: \"\", password: \"\"})\n    }*/\n  }\n  return /*#__PURE__*/_jsxDEV(LoginContextProvider, {\n    children: !token ? /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"jVus88GjEtWAO95Z2AiCx16XCvE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/FYP_Face_Animation/fyp_full/fyp_web/src/App.js"],"names":["React","useState","useContext","useEffect","BrowserRouter","Router","Routes","Route","LoginPage","Home","LoginContextProvider","LoginContext","App","token","setToken"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,oBAAP,IAA+BC,YAA/B,QAAmD,iCAAnD;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACsD;AACpD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACS,YAAD,CAApC;AAEA;AAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM;AAEJ,sBACE,QAAC,oBAAD;AAAA,cACC,CAACE,KAAD,gBAEC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFD,gBAIC,QAAC,MAAD;AAAA,6BACI,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA5CD;;GAAMD,G;;KAAAA,G;AA8CN,eAAeA,GAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from \"./components/Login/LoginPage\";\nimport Home from \"./components/Home\";\nimport LoginContextProvider, { LoginContext } from \"./components/Login/LoginContext\";\n\nconst App = () => {\n  {/*const adminUser = {\n    username: \"FMadmin\",\n    password: \"+34Myojwa\"\n  }\n\n  const [ user, setUser ] = useState({username: \"\", password: \"\"});\n  const [ error, setError ] = useState(\"\");\nconst [ isLoggedIn, setLoggedIn ] = useState(false)*/}\n  const [token, setToken] = useContext(LoginContext);\n\n  {/*const Login = details => {\n    console.log(details);\n\n    if (details.username == adminUser.username && details.password == adminUser.password) {\n      console.log (\"Logged in\");\n      setUser({\n        username: details.username\n      })\n      setLoggedIn(true)\n    } else {\n      console.log(\"Login not found\")\n      setError(\"Login not found\")\n    }\n  }\n\n  const Logout = () => {\n    console.log(\"Logout\");\n    setUser({username: \"\", password: \"\"})\n  }*/}\n\n  return (\n    <LoginContextProvider>\n    {!token ? \n    (\n      <LoginPage />\n    ) : (\n      <Router>\n          <Routes>\n            <Route path='/' element={<Home/>}/>\n          </Routes>\n      </Router>\n    )\n    }</LoginContextProvider>);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}