{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP_Face_Animation\\\\fyp_full\\\\fyp_web\\\\src\\\\components\\\\Animator\\\\ImageUploader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageContext from './ImageContext';\nimport './ImageUploader.css';\nimport uploadImg from '../../img/cloud-upload-regular-240.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ImageUploader = props => {\n  _s();\n\n  const wrapperRef = useRef(null);\n  const {\n    fileList,\n    setFileList\n  } = useContext(ImageContext);\n\n  const onDragEnter = () => wrapperRef.current.classList.add('dragover');\n\n  const onDragLeave = () => wrapperRef.current.classList.remove('dragover');\n\n  const onDrop = () => wrapperRef.current.classList.remove('dragover');\n\n  const onFileDrop = e => {\n    const newFile = e.target.files[0];\n\n    if (newFile) {\n      const updatedList = [...fileList, newFile];\n      setFileList(updatedList);\n      props.onFileChange(updatedList);\n    }\n  };\n\n  const fileRemove = file => {\n    const updatedList = [...fileList];\n    updatedList.splice(fileList.indexOf(file), 1);\n    setFileList(updatedList);\n    props.onFileChange(updatedList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: wrapperRef,\n      className: \"drop-file-input\",\n      onDragEnter: onDragEnter,\n      onDragLeave: onDragLeave,\n      onDrop: onDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-file-input__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadImg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop your files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        value: \"\",\n        onChange: onFileDrop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), fileList.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"drop-file-preview__title\",\n        children: \"Ready to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this), fileList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-file-preview__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-file-preview__item__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.size, \"B\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drop-file-preview__item__del\",\n          onClick: () => fileRemove(item),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(ImageUploader, \"JQVKkwKoMrWlaglsFak3Ow3zHs4=\");\n\n_c = ImageUploader;\nImageUploader.propTypes = {\n  onFileChange: PropTypes.func\n};\nexport default ImageUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"sources":["E:/FYP_Face_Animation/fyp_full/fyp_web/src/components/Animator/ImageUploader.js"],"names":["React","useRef","useState","useContext","PropTypes","ImageContext","uploadImg","ImageUploader","props","wrapperRef","fileList","setFileList","onDragEnter","current","classList","add","onDragLeave","remove","onDrop","onFileDrop","e","newFile","target","files","updatedList","onFileChange","fileRemove","file","splice","indexOf","length","map","item","index","name","size","propTypes","func"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageContext from './ImageContext';\r\n\r\nimport './ImageUploader.css';\r\n\r\nimport uploadImg from '../../img/cloud-upload-regular-240.png';\r\n\r\n\r\nconst ImageUploader = props => {\r\n\r\n    const wrapperRef = useRef(null);\r\n\r\n    const {fileList, setFileList} = useContext(ImageContext);\r\n\r\n    const onDragEnter = () => wrapperRef.current.classList.add('dragover');\r\n\r\n    const onDragLeave = () => wrapperRef.current.classList.remove('dragover');\r\n\r\n    const onDrop = () => wrapperRef.current.classList.remove('dragover');\r\n\r\n    const onFileDrop = (e) => {\r\n        const newFile = e.target.files[0];\r\n        if (newFile) {\r\n            const updatedList = [...fileList, newFile];\r\n            setFileList(updatedList);\r\n            props.onFileChange(updatedList);\r\n        }\r\n    }\r\n\r\n    const fileRemove = (file) => {\r\n        const updatedList = [...fileList];\r\n        updatedList.splice(fileList.indexOf(file), 1);\r\n        setFileList(updatedList);\r\n        props.onFileChange(updatedList);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                ref={wrapperRef}\r\n                className=\"drop-file-input\"\r\n                onDragEnter={onDragEnter}\r\n                onDragLeave={onDragLeave}\r\n                onDrop={onDrop}\r\n            >\r\n                <div className=\"drop-file-input__label\">\r\n                    <img src={uploadImg} alt=\"\" />\r\n                    <p>Drag & Drop your files here</p>\r\n                </div>\r\n                <input type=\"file\" value=\"\" onChange={onFileDrop}/>\r\n            </div>\r\n            {\r\n                fileList.length > 0 ? (\r\n                    <div className=\"drop-file-preview\">\r\n                        <p className=\"drop-file-preview__title\">\r\n                            Ready to upload\r\n                        </p>\r\n                        {\r\n                            fileList.map((item, index) => (\r\n                                <div key={index} className=\"drop-file-preview__item\">\r\n                                    <div className=\"drop-file-preview__item__info\">\r\n                                        <p>{item.name}</p>\r\n                                        <p>{item.size}B</p>\r\n                                    </div>\r\n                                    <span className=\"drop-file-preview__item__del\" onClick={() => fileRemove(item)}>x</span>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nImageUploader.propTypes = {\r\n    onFileChange: PropTypes.func\r\n}\r\n\r\nexport default ImageUploader;"]},"metadata":{},"sourceType":"module"}