{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP_Face_Animation\\\\fyp_full\\\\fyp_web\\\\src\\\\components\\\\Animator\\\\ImageUploader.js\",\n    _s = $RefreshSig$();\n\nimport { Center, Text, Heading, VStack, Button, Input, HStack, Container, SimpleGrid, Box, Image, Spinner } from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { upload } from \"@testing-library/user-event/dist/upload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isSelected, setIsSelected] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [allPhotos, setAllPhotos] = useState([]);\n  const [uploadSuccessful, setUploadSuccessful] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  useEffect(() => {\n    fetch(\"/get-image\").then(response => response.json()).then(data => {\n      console.log(data);\n      setAllPhotos(data);\n    });\n  }, [uploadSuccessful]);\n\n  const onInputChange = e => {\n    console.log(e.target.files[0]);\n    setIsSelected(true);\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const onButtonClick = e => {\n    console.log(\"Button clicked..\");\n    e.target.value = \"\";\n  };\n\n  const onFileUpload = e => {\n    setShowSpinner(true);\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile, selectedFile.name);\n    fetch(\"/get-image\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success posting!!\");\n      setUploadSuccessful(!uploadSuccessful);\n      setShowSpinner(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Center, {\n      bg: \"black\",\n      color: \"white\",\n      padding: 8,\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 7,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Your Gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Take a look at all your photos!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: onInputChange,\n            onClick: onButtonClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"lg\",\n            colorScheme: \"red\",\n            isDisabled: !isSelected,\n            onClick: onFileUpload,\n            children: \"Upload Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), showSpinner && /*#__PURE__*/_jsxDEV(Center, {\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              size: \"xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Your Photos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          columns: 3,\n          spacing: 8,\n          children: allPhotos.length !== 0 && allPhotos.map(photo => {\n            return /*#__PURE__*/_jsxDEV(Image, {\n              borderRadius: 25,\n              boxSize: \"300px\",\n              src: photo[\"photo_url\"],\n              fallbackSrc: \"https://via.placeholder.com/150\",\n              objectFit: \"cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"W8s99P18tVobdbo5cdBXdojmSJo=\");\n\n_c = App;\nexport default ImageUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/FYP_Face_Animation/fyp_full/fyp_web/src/components/Animator/ImageUploader.js"],"names":["Center","Text","Heading","VStack","Button","Input","HStack","Container","SimpleGrid","Box","Image","Spinner","useState","useEffect","ChakraProvider","upload","App","isSelected","setIsSelected","selectedFile","setSelectedFile","allPhotos","setAllPhotos","uploadSuccessful","setUploadSuccessful","showSpinner","setShowSpinner","fetch","then","response","json","data","console","log","onInputChange","e","target","files","onButtonClick","value","onFileUpload","formData","FormData","append","name","method","body","length","map","photo","ImageUploader"],"mappings":"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","sourcesContent":["import {\r\n    Center,\r\n    Text,\r\n    Heading,\r\n    VStack,\r\n    Button,\r\n    Input,\r\n    HStack,\r\n    Container,\r\n    SimpleGrid,\r\n    Box,\r\n    Image,\r\n    Spinner,\r\n  } from \"@chakra-ui/react\";\r\n  \r\n  import { useState, useEffect } from \"react\";\r\n  import { ChakraProvider } from \"@chakra-ui/react\";\r\n  import { upload } from \"@testing-library/user-event/dist/upload\";\r\n  \r\n  function App() {\r\n    const [isSelected, setIsSelected] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [allPhotos, setAllPhotos] = useState([]);\r\n    const [uploadSuccessful, setUploadSuccessful] = useState(false);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      fetch(\"/get-image\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          setAllPhotos(data);\r\n        });\r\n    }, [uploadSuccessful]);\r\n  \r\n    const onInputChange = (e) => {\r\n      console.log(e.target.files[0]);\r\n      setIsSelected(true);\r\n  \r\n      setSelectedFile(e.target.files[0]);\r\n    };\r\n    const onButtonClick = (e) => {\r\n      console.log(\"Button clicked..\");\r\n      e.target.value = \"\";\r\n    };\r\n  \r\n    const onFileUpload = (e) => {\r\n      setShowSpinner(true);\r\n      const formData = new FormData();\r\n      formData.append(\"file\", selectedFile, selectedFile.name);\r\n      fetch(\"/get-image\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Success posting!!\");\r\n          setUploadSuccessful(!uploadSuccessful);\r\n          setShowSpinner(false);\r\n        });\r\n    };\r\n    return (\r\n      <ChakraProvider>\r\n        <Center bg=\"black\" color=\"white\" padding={8}>\r\n          <VStack spacing={7}>\r\n            <Heading>Your Gallery</Heading>\r\n            <Text>Take a look at all your photos!</Text>\r\n            <HStack>\r\n              <input\r\n                type=\"file\"\r\n                onChange={onInputChange}\r\n                onClick={onButtonClick}\r\n              ></input>\r\n  \r\n              <Button\r\n                size=\"lg\"\r\n                colorScheme=\"red\"\r\n                isDisabled={!isSelected}\r\n                onClick={onFileUpload}\r\n              >\r\n                Upload Photo\r\n              </Button>\r\n              {showSpinner && (\r\n                <Center>\r\n                  <Spinner size=\"xl\" />\r\n                </Center>\r\n              )}\r\n            </HStack>\r\n            <Heading>Your Photos</Heading>\r\n            <SimpleGrid columns={3} spacing={8}>\r\n              {allPhotos.length !== 0 &&\r\n                allPhotos.map((photo) => {\r\n                  return (\r\n                    <Image\r\n                      borderRadius={25}\r\n                      boxSize=\"300px\"\r\n                      src={photo[\"photo_url\"]}\r\n                      fallbackSrc=\"https://via.placeholder.com/150\"\r\n                      objectFit=\"cover\"\r\n                    />\r\n                  );\r\n                })}\r\n            </SimpleGrid>\r\n          </VStack>\r\n        </Center>\r\n      </ChakraProvider>\r\n    );\r\n  }\r\n  \r\n  export default ImageUploader;"]},"metadata":{},"sourceType":"module"}