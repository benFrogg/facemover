{"ast":null,"code":"var _jsxFileName = \"D:\\\\FYP_Face_Animation\\\\fyp_full\\\\fyp_web\\\\src\\\\components\\\\Login\\\\LoginContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContext = /*#__PURE__*/createContext();\nexport const LoginContextProvider = props => {\n  _s();\n\n  {\n    /*const defaultUser = {\r\n     username: \"\",\r\n     email: \"\",\r\n     subTier: \"\",\r\n     startDate: \"\",\r\n     endDate: \"\",\r\n    };*/\n  }\n  {\n    /*const [loggedInUser, setLoggedInUser] = useState(defaultUser);\r\n    const [isLoggedIn, setLoggedIn] = useState(false);*/\n  }\n  {\n    /*const setLoginUserDets = (user) => {\r\n     setLoggedIn(true);\r\n     setLoggedInUser(user);\r\n    };\r\n     const logout = () => {\r\n     setLoggedIn(false);\r\n     setLoggedInUser(defaultUser);\r\n    };\r\n     const refreshLoginDets = async () => {\r\n     let loginDets = {\r\n       userID: loggedInUser.userID,\r\n       password: loggedInUser.password,\r\n     };\r\n       await axios\r\n       .post(API_URL + \"login/\", loginDets)\r\n       .then((response) => {\r\n         setLoginUserDets(response.data.body);\r\n       })\r\n       .catch((error) => {\r\n         if (error.response) {\r\n           console.log(error.response);\r\n         } else if (error.request) {\r\n           console.log(error.request);\r\n         } else {\r\n           console.log(\"error\", error.message);\r\n         }\r\n       });\r\n    };*/\n  }\n  const [token, setToken] = useState(localStorage.getItem(\"theToken\"));\n  useEffect(() => {\n    const fetchUser = async () => {\n      const requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + token\n        }\n      };\n      const response = await fetch(\"/users/me\", requestOptions);\n\n      if (!response.ok) {\n        setToken(null);\n      }\n\n      localStorage.setItem(\"theToken\", token);\n    };\n\n    fetchUser();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n      value: {\n        token,\n        setToken\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginContextProvider, \"5v2YAGWgM5i6H0T+qUVUE0ZZMz8=\");\n\n_c = LoginContextProvider;\nexport default LoginContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContextProvider\");","map":{"version":3,"sources":["D:/FYP_Face_Animation/fyp_full/fyp_web/src/components/Login/LoginContext.js"],"names":["React","createContext","useEffect","useState","LoginContext","LoginContextProvider","props","token","setToken","localStorage","getItem","fetchUser","requestOptions","method","headers","Authorization","response","fetch","ok","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;;AAEA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AAEA,OAAO,MAAMI,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AAC7C;AAAC;AACH;AACA;AACA;AACA;AACA;AACA;AAAO;AAEL;AAAC;AACH;AAAqD;AAInD;AAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGO;AAEL,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACM,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAAlC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,YAAMC,cAAc,GAAG;AACrBC,QAAAA,MAAM,EAAE,KADa;AAErBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,YAAYR;AAFpB;AAFY,OAAvB;AAQA,YAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAcL,cAAd,CAA5B;;AAEA,UAAI,CAACI,QAAQ,CAACE,EAAd,EAAkB;AAChBV,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACDC,MAAAA,YAAY,CAACU,OAAb,CAAqB,UAArB,EAAiCZ,KAAjC;AACD,KAfD;;AAgBAI,IAAAA,SAAS;AACV,GAlBQ,EAkBN,CAACJ,KAAD,CAlBM,CAAT;AAsBA,sBACE;AAAA,2BACE,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAA9B;AAAA,gBACGF,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7EM;;GAAMf,oB;;KAAAA,oB;AA+Eb,eAAeD,YAAf","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nconst LoginContext = createContext();\r\n\r\nexport const LoginContextProvider = (props) => {\r\n  {/*const defaultUser = {\r\n    username: \"\",\r\n    email: \"\",\r\n    subTier: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  };*/}\r\n\r\n  {/*const [loggedInUser, setLoggedInUser] = useState(defaultUser);\r\nconst [isLoggedIn, setLoggedIn] = useState(false);*/}\r\n\r\n  \r\n\r\n  {/*const setLoginUserDets = (user) => {\r\n    setLoggedIn(true);\r\n    setLoggedInUser(user);\r\n  };\r\n\r\n  const logout = () => {\r\n    setLoggedIn(false);\r\n    setLoggedInUser(defaultUser);\r\n  };\r\n\r\n  const refreshLoginDets = async () => {\r\n    let loginDets = {\r\n      userID: loggedInUser.userID,\r\n      password: loggedInUser.password,\r\n    };\r\n\r\n    await axios\r\n      .post(API_URL + \"login/\", loginDets)\r\n      .then((response) => {\r\n        setLoginUserDets(response.data.body);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log(\"error\", error.message);\r\n        }\r\n      });\r\n  };*/}\r\n\r\n  const [token, setToken] = useState(localStorage.getItem(\"theToken\"));\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        }\r\n      }\r\n\r\n      const response = await fetch(\"/users/me\", requestOptions);\r\n\r\n      if (!response.ok) {\r\n        setToken(null);\r\n      }\r\n      localStorage.setItem(\"theToken\", token)\r\n    }\r\n    fetchUser();\r\n  }, [token]);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <LoginContext.Provider value={{token, setToken}}>\r\n        {props.children}\r\n      </LoginContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginContext;\r\n"]},"metadata":{},"sourceType":"module"}