{"ast":null,"code":"var _jsxFileName = \"D:\\\\FYP_Face_Animation\\\\fyp_full\\\\fyp_web\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from \"./components/Login/LoginPage\";\nimport Home from \"./components/Home\";\nimport LoginContext from \"./components/Login/LoginContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  /*const adminUser = {\n    username: \"FMadmin\",\n    password: \"+34Myojwa\"\n  }\n   const [ user, setUser ] = useState({username: \"\", password: \"\"});\n  const [ error, setError ] = useState(\"\");\n  const [ isLoggedIn, setLoggedIn ] = useState(false)*/\n  const {\n    token\n  } = useContext(LoginContext);\n  /*const Login = details => {\n    console.log(details);\n     if (details.username == adminUser.username && details.password == adminUser.password) {\n      console.log (\"Logged in\");\n      setUser({\n        username: details.username\n      })\n      setLoggedIn(true)\n    } else {\n      console.log(\"Login not found\")\n      setError(\"Login not found\")\n    }\n  }\n   const Logout = () => {\n    console.log(\"Logout\");\n    setUser({username: \"\", password: \"\"})\n  }*/\n\n  useEffect(() => {\n    localStorage.clear();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !token ? /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"Tt0kBxyTwi8XFeSCu7ZtfoUDYi8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/FYP_Face_Animation/fyp_full/fyp_web/src/App.js"],"names":["React","useContext","useEffect","BrowserRouter","Router","Routes","Route","LoginPage","Home","LoginContext","App","token","localStorage","clear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACF;AACA;AACA;AACA;AACA;AACA;AAEE,QAAM;AAACC,IAAAA;AAAD,MAAUV,UAAU,CAACQ,YAAD,CAA1B;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIEP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACC,KAAb;AACD,GAFQ,CAAT;AAIA,sBACE;AAAA,cACC,CAACF,KAAD,gBAEC,QAAC,MAAD;AAAA,6BACI,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFD,gBAQC,QAAC,MAAD;AAAA,6BACI,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AATF,mBADF;AAiBD,CApDD;;GAAMD,G;;KAAAA,G;AAsDN,eAAeA,GAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from \"./components/Login/LoginPage\";\nimport Home from \"./components/Home\";\nimport LoginContext from \"./components/Login/LoginContext\";\n\nconst App = () => {\n  /*const adminUser = {\n    username: \"FMadmin\",\n    password: \"+34Myojwa\"\n  }\n\n  const [ user, setUser ] = useState({username: \"\", password: \"\"});\n  const [ error, setError ] = useState(\"\");\nconst [ isLoggedIn, setLoggedIn ] = useState(false)*/\n  const {token} = useContext(LoginContext);\n\n  /*const Login = details => {\n    console.log(details);\n\n    if (details.username == adminUser.username && details.password == adminUser.password) {\n      console.log (\"Logged in\");\n      setUser({\n        username: details.username\n      })\n      setLoggedIn(true)\n    } else {\n      console.log(\"Login not found\")\n      setError(\"Login not found\")\n    }\n  }\n\n  const Logout = () => {\n    console.log(\"Logout\");\n    setUser({username: \"\", password: \"\"})\n  }*/\n\n  useEffect(() => {\n    localStorage.clear()\n  })\n\n  return (\n    <>\n    {!token ? \n    (\n      <Router>\n          <Routes>\n            <Route path='/' element={<LoginPage />}/>\n          </Routes>\n      </Router>           \n    ) : (\n      <Router>\n          <Routes>\n            <Route path='/' element={<Home/>}/>\n          </Routes>\n      </Router>\n    )\n    }</>);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}