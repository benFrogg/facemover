{"ast":null,"code":"var _jsxFileName = \"D:\\\\FYP_Face_Animation\\\\fyp_full\\\\fyp_web\\\\src\\\\components\\\\Login\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport \"./LoginPage.css\";\nimport { Grid, Paper, Avatar, TextField, Button } from \"@material-ui/core\";\nimport VpnKeyOutlinedIcon from \"@mui/icons-material/VpnKeyOutlined\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"../Home\";\nimport { API_URL } from \"../../Constants\";\nimport LoginContext from \"./LoginContext\";\nimport axios from \"axios\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const {\n    setToken\n  } = useContext(LoginContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPW] = useState(\"\");\n  const [errorMessage, setError] = useState(\"\");\n  {\n    /*const getWelcomeMessage = async() => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const response = await fetch(\"/api\", requestOptions);\r\n    const data = response.json();\r\n      if (!response.ok) {\r\n      console.log(\"Not right\")\r\n    } else {\r\n      console.log(data)\r\n    }\r\n    }\r\n    useEffect(() => {\r\n    getWelcomeMessage();\r\n    }, [])*/\n  }\n  {\n    /*const {\r\n    loggedInUser,\r\n    isLoggedIn,\r\n    setLoginUserDets,\r\n    logout } = useContext(LoginContext);\r\n    \r\n    const [details, setDetails] = useState({ username: \"\", password: \"\" });\r\n    const [ token, setToken ] = useContext(LoginContext);\r\n    useEffect(() => {\r\n    console.log(setLoginUserDets)\r\n    console.log(isLoggedIn)\r\n    }, [])*/\n  } // const [isLoggedIn, setLoggedIn] = useState(false);\n\n  /*const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n      Login(details);\r\n  };*/\n\n  {\n    /*const changeUser = (e) => {\r\n    setDetails.username(e.target.value)\r\n    }\r\n    const changePW = (e) => {\r\n    setDetails.password(e.target.value)\r\n    }\r\n    const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    console.log(details.username, \" /\", details.password)\r\n      let loginDets = {\r\n      userDets: details\r\n    }\r\n      await axios.post(API_URL + \"login/\", loginDets)\r\n    .then(response => {\r\n      console.log(response);\r\n      setDetails('', '')\r\n      setLoginUserDets(response.data.body)\r\n    }).catch(error => {\r\n      if(error.response) {\r\n        console.log(error.response);\r\n      } else if (error.request) {\r\n          console.log(error.request);\r\n      } else {\r\n          console.log('error', error.message);\r\n      }\r\n        setDetails('', '')\r\n    })\r\n    }*/\n  }\n\n  const submitLogin = async () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: JSON.stringify(`grant_type=&username=${email}&password=${password}&scope=&client_id=&client_secret=`)\n    };\n    const response = await fetch(\"/token\", requestOptions);\n    const data = await response.json();\n\n    if (!response.ok) {\n      setError(data.detail);\n    } else {\n      setToken(data.access_token);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    submitLogin();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: \"paperStyle\",\n        elevation: 10,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Face Mover\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-code-branch fas-fade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"introSign\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            id: \"loginLogo\",\n            children: /*#__PURE__*/_jsxDEV(VpnKeyOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"space\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [errorMessage !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            style: {\n              textAlign: \"center\",\n              color: \"red\",\n              marginTop: \"20px\",\n              marginBottom: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              message: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"userField\",\n            label: \"Username\",\n            name: \"username\",\n            placeholder: \"Enter your username\",\n            variant: \"standard\",\n            onChange: e => setEmail(e.target.value),\n            value: email,\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"passwordField\",\n            label: \"Password\",\n            name: \"password\",\n            placeholder: \"Enter your password\",\n            variant: \"standard\",\n            type: \"password\",\n            onChange: e => setPW(e.target.value),\n            value: password,\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"submitButton\",\n            type: \"submit\",\n            color: \"primary\",\n            variant: \"contained\",\n            fullWidth: true,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(LoginPage, \"Gtmv0V2Wd4Q4mkZQhgcj6s2Qe/o=\");\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["D:/FYP_Face_Animation/fyp_full/fyp_web/src/components/Login/LoginPage.js"],"names":["React","useEffect","useState","useContext","Grid","Paper","Avatar","TextField","Button","VpnKeyOutlinedIcon","BrowserRouter","Router","Routes","Route","Home","API_URL","LoginContext","axios","ErrorMessage","LoginPage","setToken","email","setEmail","password","setPW","errorMessage","setError","submitLogin","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","ok","detail","access_token","handleSubmit","e","preventDefault","textAlign","color","marginTop","marginBottom","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"./LoginPage.css\";\r\nimport { Grid, Paper, Avatar, TextField, Button } from \"@material-ui/core\";\r\nimport VpnKeyOutlinedIcon from \"@mui/icons-material/VpnKeyOutlined\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Home from \"../Home\";\r\nimport { API_URL } from \"../../Constants\";\r\nimport LoginContext from \"./LoginContext\";\r\nimport axios from \"axios\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\nfunction LoginPage() {\r\n  const {setToken} = useContext(LoginContext);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPW] = useState(\"\");\r\n  const [errorMessage, setError] = useState(\"\");\r\n\r\n  {\r\n    /*const getWelcomeMessage = async() => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const response = await fetch(\"/api\", requestOptions);\r\n    const data = response.json();\r\n\r\n    if (!response.ok) {\r\n      console.log(\"Not right\")\r\n    } else {\r\n      console.log(data)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWelcomeMessage();\r\n  }, [])*/\r\n  }\r\n\r\n  {\r\n    /*const {\r\n    loggedInUser,\r\n    isLoggedIn,\r\n    setLoginUserDets,\r\n    logout } = useContext(LoginContext);\r\n  \r\n\r\n  const [details, setDetails] = useState({ username: \"\", password: \"\" });\r\n  const [ token, setToken ] = useContext(LoginContext);\r\n\r\n  useEffect(() => {\r\n    console.log(setLoginUserDets)\r\n    console.log(isLoggedIn)\r\n  }, [])*/\r\n  }\r\n  // const [isLoggedIn, setLoggedIn] = useState(false);\r\n\r\n  /*const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    Login(details);\r\n  };*/\r\n\r\n  {\r\n    /*const changeUser = (e) => {\r\n    setDetails.username(e.target.value)\r\n  }\r\n\r\n  const changePW = (e) => {\r\n    setDetails.password(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    console.log(details.username, \" /\", details.password)\r\n\r\n    let loginDets = {\r\n      userDets: details\r\n    }\r\n\r\n    await axios.post(API_URL + \"login/\", loginDets)\r\n    .then(response => {\r\n      console.log(response);\r\n      setDetails('', '')\r\n      setLoginUserDets(response.data.body)\r\n    }).catch(error => {\r\n      if(error.response) {\r\n        console.log(error.response);\r\n      } else if (error.request) {\r\n          console.log(error.request);\r\n      } else {\r\n          console.log('error', error.message);\r\n      }\r\n\r\n      setDetails('', '')\r\n    })\r\n  }*/\r\n  }\r\n\r\n  const submitLogin = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: JSON.stringify(\r\n        `grant_type=&username=${email}&password=${password}&scope=&client_id=&client_secret=`\r\n      ),\r\n    };\r\n\r\n    const response = await fetch(\"/token\", requestOptions);\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setError(data.detail);\r\n    } else {\r\n      setToken(data.access_token);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    submitLogin();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid>\r\n        <Paper className=\"paperStyle\" elevation={10}>\r\n          <h2>\r\n            Face Mover&nbsp;&nbsp;\r\n            <i className=\"fas fa-code-branch fas-fade\"></i>\r\n          </h2>\r\n          <Grid className=\"introSign\" align=\"center\">\r\n            <Avatar id=\"loginLogo\">\r\n              <VpnKeyOutlinedIcon />\r\n            </Avatar>\r\n            <h3 className=\"space\">Sign in</h3>\r\n          </Grid>\r\n          <form onSubmit={handleSubmit}>\r\n            {errorMessage !== \"\" ? (\r\n              <div\r\n                className=\"error\"\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  color: \"red\",\r\n                  marginTop: \"20px\",\r\n                  marginBottom: \"20px\",\r\n                }}\r\n              >\r\n                <ErrorMessage message={errorMessage} />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <TextField\r\n              id=\"userField\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              placeholder=\"Enter your username\"\r\n              variant=\"standard\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              fullWidth\r\n              required\r\n            />\r\n            <TextField\r\n              id=\"passwordField\"\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              variant=\"standard\"\r\n              type=\"password\"\r\n              onChange={(e) => setPW(e.target.value)}\r\n              value={password}\r\n              fullWidth\r\n              required\r\n            />\r\n            {/*<FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                name=\"checkedB\"\r\n                color=\"primary\"\r\n              /> \r\n              }\r\n            label=\"Remember me\"/>*/}\r\n            <Button\r\n              id=\"submitButton\"\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}