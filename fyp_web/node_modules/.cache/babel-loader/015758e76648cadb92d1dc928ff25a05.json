{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP_Face_Animation\\\\fyp_full\\\\fyp_web\\\\src\\\\components\\\\Animator\\\\ImageUploader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport './ImageUploader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImageUploader() {\n  _s();\n\n  const [image, setImage] = useState([]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: \"image/jpg, image/png\",\n    onDrop: acceptedFiles => {\n      setImage(acceptedFiles.map(upFile => Object.assign(upFile, {\n        preview: URL.createObjectURL(upFile)\n      })));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-uploader\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"image-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n        style: {\n          border: \"3px solid black\",\n          height: \"300px\",\n          width: \"250px\",\n          textAlign: \"center\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"imageBoxHover\",\n          children: \"Drop Image Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"imageBox\",\n          children: [\"Drag n' Drop Image\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 133\n          }, this), \"OR\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 140\n          }, this), /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"Browse Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 145\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 91\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: image.map(upFile => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: upFile.preview,\n              alt: \"Preview\",\n              style: {\n                width: \"400px\",\n                height: \"500px\",\n                border: \"3px solid #fff\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImageUploader, \"kY/zR2Z6eRKC7zpzrxF/ioxrZQ4=\", false, function () {\n  return [useDropzone];\n});\n\n_c = ImageUploader;\nexport default ImageUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"sources":["E:/FYP_Face_Animation/fyp_full/fyp_web/src/components/Animator/ImageUploader.js"],"names":["React","useState","useDropzone","ImageUploader","image","setImage","getRootProps","getInputProps","isDragActive","accept","onDrop","acceptedFiles","map","upFile","Object","assign","preview","URL","createObjectURL","border","height","width","textAlign","display","justifyContent","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,qBAAP;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAACK,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAA8CN,WAAW,CAAC;AAC5DO,IAAAA,MAAM,EAAE,sBADoD;AAE5DC,IAAAA,MAAM,EAAGC,aAAD,IAAmB;AACvBN,MAAAA,QAAQ,CACJM,aAAa,CAACC,GAAd,CAAmBC,MAAD,IAAYC,MAAM,CAACC,MAAP,CAAcF,MAAd,EAAsB;AAChDG,QAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,MAApB;AADuC,OAAtB,CAA9B,CADI,CAAR;AAKH;AAR2D,GAAD,CAA/D;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA,8BACI,oBAASP,YAAY,EAArB;AAAyB,QAAA,KAAK,EAAE;AAACa,UAAAA,MAAM,EAAE,iBAAT;AAA4BC,UAAAA,MAAM,EAAC,OAAnC;AAA4CC,UAAAA,KAAK,EAAC,OAAlD;AAA2DC,UAAAA,SAAS,EAAE,QAAtE;AAAgFC,UAAAA,OAAO,EAAE,MAAzF;AAAiGC,UAAAA,cAAc,EAAE,QAAjH;AAA2HC,UAAAA,UAAU,EAAE;AAAvI,SAAhC;AAAA,gCACI,sBAAWlB,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGQC,YAAY,gBAAG;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAsD;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA,wDAA0C;AAAA;AAAA;AAAA;AAAA,kBAA1C,qBAAiD;AAAA;AAAA;AAAA;AAAA,kBAAjD,eAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAH1E;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,kBACKJ,KAAK,CAACQ,GAAN,CAAWC,MAAD,IAAY;AACnB,8BACI;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEA,MAAM,CAACG,OAAjB;AAA0B,cAAA,GAAG,EAAC,SAA9B;AAAwC,cAAA,KAAK,EAAE;AAACK,gBAAAA,KAAK,EAAC,OAAP;AAAgBD,gBAAAA,MAAM,EAAC,OAAvB;AAAgCD,gBAAAA,MAAM,EAAC;AAAvC;AAA/C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SANA;AADL;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAnCQhB,a;UAG+CD,W;;;KAH/CC,a;AAqCT,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport './ImageUploader.css';\r\n\r\nfunction ImageUploader() {\r\n    const [image, setImage] = useState([]);\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({\r\n        accept: \"image/jpg, image/png\",\r\n        onDrop: (acceptedFiles) => {\r\n            setImage (\r\n                acceptedFiles.map((upFile) => Object.assign(upFile, {\r\n                    preview: URL.createObjectURL(upFile)\r\n                }))\r\n            )\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"image-uploader\">\r\n            <header className=\"image-header\">\r\n                <div {...getRootProps()} style={{border: \"3px solid black\", height:\"300px\", width:\"250px\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                    <input {...getInputProps()} />\r\n                    {\r\n                        isDragActive ? <p className=\"imageBoxHover\">Drop Image Here</p> : <p className=\"imageBox\">Drag n' Drop Image<br/>OR<br/><u>Browse Image</u></p>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    {image.map((upFile) => {\r\n                        return (\r\n                            <div>\r\n                                <img src={upFile.preview} alt=\"Preview\" style={{width:\"400px\", height:\"500px\", border:\"3px solid #fff\"}} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUploader;"]},"metadata":{},"sourceType":"module"}