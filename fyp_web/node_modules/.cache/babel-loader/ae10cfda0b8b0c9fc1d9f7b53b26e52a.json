{"ast":null,"code":"var _jsxFileName = \"D:\\\\FYP_Face_Animation\\\\fyp_web\\\\src\\\\components\\\\FileUpload.js\";\nimport React from 'react';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Dropzone from 'react-dropzone-uploader';\nimport { getDroppedOrSelectedFiles } from 'html5-file-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUpload = () => {\n  const fileParams = _ref => {\n    let {\n      meta\n    } = _ref;\n    return {\n      url: 'https://httpbin.org/post'\n    };\n  };\n\n  const onFileChange = (_ref2, status) => {\n    let {\n      meta,\n      file\n    } = _ref2;\n    console.log(status, meta, file);\n  };\n\n  const onSubmit = (files, allFiles) => {\n    allFiles.forEach(f => f.remove());\n  };\n\n  const getFilesFromEvent = e => {\n    return new Promise(resolve => {\n      getDroppedOrSelectedFiles(e).then(chosenFiles => {\n        resolve(chosenFiles.map(f => f.fileObject));\n      });\n    });\n  };\n\n  const selectFileInput = _ref3 => {\n    let {\n      accept,\n      onFiles,\n      files,\n      getFilesFromEvent\n    } = _ref3;\n    const textMsg = files.length > 0 ? 'Upload Again' : 'Select Files';\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"btn btn-danger mt-4\",\n      children: [textMsg, /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: 'none'\n        },\n        type: \"file\",\n        accept: accept,\n        multiple: true,\n        onChange: e => {\n          getFilesFromEvent(e).then(chosenFiles => {\n            onFiles(chosenFiles);\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  };\n};\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["D:/FYP_Face_Animation/fyp_web/src/components/FileUpload.js"],"names":["React","Dropzone","getDroppedOrSelectedFiles","FileUpload","fileParams","meta","url","onFileChange","status","file","console","log","onSubmit","files","allFiles","forEach","f","remove","getFilesFromEvent","e","Promise","resolve","then","chosenFiles","map","fileObject","selectFileInput","accept","onFiles","textMsg","length","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yCAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,yBAAT,QAA0C,qBAA1C;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,UAAU,GAAG,QAAc;AAAA,QAAb;AAAEC,MAAAA;AAAF,KAAa;AAC7B,WAAO;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAP;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,QAAiBC,MAAjB,KAA4B;AAAA,QAA3B;AAAEH,MAAAA,IAAF;AAAQI,MAAAA;AAAR,KAA2B;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoBH,IAApB,EAA0BI,IAA1B;AACH,GAFD;;AAIA,QAAMG,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAClCA,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,CAAC,IAAIA,CAAC,CAACC,MAAF,EAAtB;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAGC,CAAC,IAAI;AAC3B,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1BnB,MAAAA,yBAAyB,CAACiB,CAAD,CAAzB,CAA6BG,IAA7B,CAAkCC,WAAW,IAAI;AAC7CF,QAAAA,OAAO,CAACE,WAAW,CAACC,GAAZ,CAAgBR,CAAC,IAAIA,CAAC,CAACS,UAAvB,CAAD,CAAP;AACH,OAFD;AAGH,KAJM,CAAP;AAKH,GAND;;AAQA,QAAMC,eAAe,GAAG,SAAmD;AAAA,QAAlD;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBf,MAAAA,KAAnB;AAA0BK,MAAAA;AAA1B,KAAkD;AACvE,UAAMW,OAAO,GAAGhB,KAAK,CAACiB,MAAN,GAAe,CAAf,GAAmB,cAAnB,GAAoC,cAApD;AAEA,wBACI;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,iBACKD,OADL,eAEI;AAAO,QAAA,KAAK,EAAE;AAACE,UAAAA,OAAO,EAAE;AAAV,SAAd;AAAiC,QAAA,IAAI,EAAC,MAAtC;AAA6C,QAAA,MAAM,EAAEJ,MAArD;AAA6D,QAAA,QAAQ,MAArE;AAAsE,QAAA,QAAQ,EAAER,CAAC,IAAI;AACjFD,UAAAA,iBAAiB,CAACC,CAAD,CAAjB,CAAqBG,IAArB,CAA0BC,WAAW,IAAI;AACrCK,YAAAA,OAAO,CAACL,WAAD,CAAP;AACH,WAFD;AAGH;AAJD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH,GAdD;AAeH,CApCD;;KAAMpB,U;AAsCN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport 'react-dropzone-uploader/dist/styles.css';\r\nimport Dropzone from 'react-dropzone-uploader';\r\nimport { getDroppedOrSelectedFiles } from 'html5-file-selector';\r\n\r\nconst FileUpload = () => {\r\n    const fileParams = ({ meta }) => {\r\n        return { url: 'https://httpbin.org/post' }\r\n    }\r\n\r\n    const onFileChange = ({ meta, file }, status) => {\r\n        console.log(status, meta, file)\r\n    }\r\n    \r\n    const onSubmit = (files, allFiles) => {\r\n        allFiles.forEach(f => f.remove())\r\n    }\r\n\r\n    const getFilesFromEvent = e => {\r\n        return new Promise(resolve => {\r\n            getDroppedOrSelectedFiles(e).then(chosenFiles => {\r\n                resolve(chosenFiles.map(f => f.fileObject))\r\n            })\r\n        })\r\n    }\r\n\r\n    const selectFileInput = ({ accept, onFiles, files, getFilesFromEvent }) => {\r\n        const textMsg = files.length > 0 ? 'Upload Again' : 'Select Files'\r\n\r\n        return (\r\n            <label className=\"btn btn-danger mt-4\">\r\n                {textMsg}\r\n                <input style={{display: 'none'}} type=\"file\" accept={accept} multiple onChange={e => {\r\n                    getFilesFromEvent(e).then(chosenFiles => {\r\n                        onFiles(chosenFiles)\r\n                    })\r\n                }}\r\n            />\r\n            </label>\r\n        )\r\n    }\r\n};\r\n\r\nexport default FileUpload"]},"metadata":{},"sourceType":"module"}