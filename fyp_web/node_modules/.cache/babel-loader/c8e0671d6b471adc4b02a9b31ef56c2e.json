{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP_Face_Animation\\\\fyp_full\\\\fyp_web\\\\src\\\\components\\\\Login\\\\LoginContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport axios from 'axios';\nimport { API_URL } from \"../../Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContext = /*#__PURE__*/createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nexport const LoginContextProvider = props => {\n  _s();\n\n  const defaultUser = {\n    username: \"\",\n    email: \"\",\n    subTier: \"\",\n    startDate: \"\",\n    endDate: \"\"\n  };\n  const [loggedInUser, setLoggedInUser] = useState(defaultUser);\n  const [isLoggedIn, setLoggedIn] = useState(false);\n\n  const setLoginUserDets = user => {\n    setLoggedIn(true);\n    setLoggedInUser(user);\n  };\n\n  const logout = () => {\n    setLoggedIn(false);\n    setLoggedInUser(defaultUser);\n  };\n\n  const refreshLoginDets = async () => {\n    let loginDets = {\n      userID: loggedInUser.userID,\n      password: loggedInUser.password\n    };\n    await axios.post(API_URL + \"login/\", loginDets).then(response => {\n      setLoginUserDets(response.data.body);\n    }).catch(error => {\n      if (error.response) {\n        console.log(error.response);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log(\"error\", error.message);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n      value: {\n        loggedInUser,\n        isLoggedIn,\n        setLoginUserDets,\n        logout,\n        refreshLoginDets\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginContextProvider, \"caJ7kXbQS9+D6DiH9ghnDDopi04=\");\n\n_c = LoginContextProvider;\nexport default LoginContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContextProvider\");","map":{"version":3,"sources":["E:/FYP_Face_Animation/fyp_full/fyp_web/src/components/Login/LoginContext.js"],"names":["React","createContext","useState","axios","API_URL","LoginContext","token","isLoggedIn","login","logout","LoginContextProvider","props","defaultUser","username","email","subTier","startDate","endDate","loggedInUser","setLoggedInUser","setLoggedIn","setLoginUserDets","user","refreshLoginDets","loginDets","userID","password","post","then","response","data","body","catch","error","console","log","request","message","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,YAAY,gBAAGJ,aAAa,CAAC;AACjCK,EAAAA,KAAK,EAAE,EAD0B;AAEjCC,EAAAA,UAAU,EAAE,KAFqB;AAGjCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAG,CAHY;AAIjCG,EAAAA,MAAM,EAAE,MAAM,CAAG;AAJgB,CAAD,CAAlC;AAOA,OAAO,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AAC7C,QAAMC,WAAW,GAAG;AAClBC,IAAAA,QAAQ,EAAE,EADQ;AAElBC,IAAAA,KAAK,EAAE,EAFW;AAGlBC,IAAAA,OAAO,EAAE,EAHS;AAIlBC,IAAAA,SAAS,EAAE,EAJO;AAKlBC,IAAAA,OAAO,EAAE;AALS,GAApB;AAQA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAACU,WAAD,CAAhD;AACA,QAAM,CAACL,UAAD,EAAaa,WAAb,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMmB,gBAAgB,GAAIC,IAAD,IAAU;AACjCF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAD,IAAAA,eAAe,CAACG,IAAD,CAAf;AACD,GAHD;;AAKA,QAAMb,MAAM,GAAG,MAAM;AACnBW,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAD,IAAAA,eAAe,CAACP,WAAD,CAAf;AACD,GAHD;;AAKA,QAAMW,gBAAgB,GAAG,YAAY;AACnC,QAAIC,SAAS,GAAG;AACdC,MAAAA,MAAM,EAAEP,YAAY,CAACO,MADP;AAEdC,MAAAA,QAAQ,EAAER,YAAY,CAACQ;AAFT,KAAhB;AAKA,UAAMvB,KAAK,CACRwB,IADG,CACEvB,OAAO,GAAG,QADZ,EACsBoB,SADtB,EAEHI,IAFG,CAEGC,QAAD,IAAc;AAClBR,MAAAA,gBAAgB,CAACQ,QAAQ,CAACC,IAAT,CAAcC,IAAf,CAAhB;AACD,KAJG,EAKHC,KALG,CAKIC,KAAD,IAAW;AAChB,UAAIA,KAAK,CAACJ,QAAV,EAAoB;AAClBK,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACJ,QAAlB;AACD,OAFD,MAEO,IAAII,KAAK,CAACG,OAAV,EAAmB;AACxBF,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,OAFM,MAEA;AACLF,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACI,OAA3B;AACD;AACF,KAbG,CAAN;AAcD,GApBD;;AAsBA,sBACE;AAAA,2BACE,QAAC,YAAD,CAAc,QAAd;AACE,MAAA,KAAK,EAAE;AACLnB,QAAAA,YADK;AAELX,QAAAA,UAFK;AAGLc,QAAAA,gBAHK;AAILZ,QAAAA,MAJK;AAKLc,QAAAA;AALK,OADT;AAAA,gBASGZ,KAAK,CAAC2B;AATT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA3DM;;GAAM5B,oB;;KAAAA,oB;AA6Db,eAAeL,YAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { API_URL } from \"../../Constants\";\r\n\r\nconst LoginContext = createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => { },\r\n  logout: () => { },\r\n});\r\n\r\nexport const LoginContextProvider = (props) => {\r\n  const defaultUser = {\r\n    username: \"\",\r\n    email: \"\",\r\n    subTier: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  };\r\n\r\n  const [loggedInUser, setLoggedInUser] = useState(defaultUser);\r\n  const [isLoggedIn, setLoggedIn] = useState(false);\r\n\r\n  const setLoginUserDets = (user) => {\r\n    setLoggedIn(true);\r\n    setLoggedInUser(user);\r\n  };\r\n\r\n  const logout = () => {\r\n    setLoggedIn(false);\r\n    setLoggedInUser(defaultUser);\r\n  };\r\n\r\n  const refreshLoginDets = async () => {\r\n    let loginDets = {\r\n      userID: loggedInUser.userID,\r\n      password: loggedInUser.password,\r\n    };\r\n\r\n    await axios\r\n      .post(API_URL + \"login/\", loginDets)\r\n      .then((response) => {\r\n        setLoginUserDets(response.data.body);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log(\"error\", error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <LoginContext.Provider\r\n        value={{\r\n          loggedInUser,\r\n          isLoggedIn,\r\n          setLoginUserDets,\r\n          logout,\r\n          refreshLoginDets\r\n        }}\r\n      >\r\n        {props.children}\r\n      </LoginContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginContext;\r\n"]},"metadata":{},"sourceType":"module"}