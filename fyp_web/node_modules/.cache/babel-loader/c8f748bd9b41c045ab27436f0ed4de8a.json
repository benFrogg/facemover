{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP_Face_Animation\\\\fyp_full\\\\fyp_web\\\\src\\\\components\\\\Animator\\\\ImageContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageContext = /*#__PURE__*/createContext();\nexport const ImageContextProvider = props => {\n  _s();\n\n  const [image, setImage] = useState([]);\n  {\n    /*useEffect(() => {\r\n     const fetchUser = async () => {\r\n       const requestOptions = {\r\n         method: \"GET\",\r\n         headers: {\r\n           \"Content-Type\": \"application/json\",\r\n           Authorization: \"Bearer \" + token,\r\n         }\r\n       }\r\n         const response = await fetch(\"/users/me\", requestOptions);\r\n         if (!response.ok) {\r\n         setToken(null);\r\n       }\r\n       localStorage.setItem(\"theToken\", token)\r\n     }\r\n     fetchUser();\r\n    }, [token]);*/\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ImageContext.Provider, {\n      value: {\n        image,\n        setImage\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageContextProvider, \"DGue+pwyCBKe/L+qcOeAL4sTjdo=\");\n\n_c = ImageContextProvider;\nexport default ImageContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageContextProvider\");","map":{"version":3,"sources":["E:/FYP_Face_Animation/fyp_full/fyp_web/src/components/Animator/ImageContext.js"],"names":["React","createContext","useEffect","useState","ImageContext","ImageContextProvider","props","image","setImage","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;;AAEA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AAEA,OAAO,MAAMI,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AAE7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA;AAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEiB;AAIf,sBACE;AAAA,2BACE,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAA9B;AAAA,gBACGF,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjCM;;GAAMJ,oB;;KAAAA,oB;AAmCb,eAAeA,oBAAf","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nconst ImageContext = createContext();\r\n\r\nexport const ImageContextProvider = (props) => {\r\n\r\n  const [image, setImage] = useState([]);\r\n\r\n  {/*useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        }\r\n      }\r\n\r\n      const response = await fetch(\"/users/me\", requestOptions);\r\n\r\n      if (!response.ok) {\r\n        setToken(null);\r\n      }\r\n      localStorage.setItem(\"theToken\", token)\r\n    }\r\n    fetchUser();\r\n  }, [token]);*/}\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ImageContext.Provider value={{image, setImage}}>\r\n        {props.children}\r\n      </ImageContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}